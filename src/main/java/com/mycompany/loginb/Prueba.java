/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.loginb;

import javax.swing.JOptionPane;

/**
 *
 * @author anthony
 */
public class Prueba extends javax.swing.JFrame {

    /**
     * Creates new form Prueba
     */
    public Prueba() {
       
        initComponents();
        this.setLocationRelativeTo(null); 
        jLabel1.setText("Bienvenido Alumno: "+LoginB.alumnoLogeado.getNombre() +" "+LoginB.alumnoLogeado.getApellido()+" "+LoginB.alumnoLogeado.getCarne());

        for(Curso e : LoginB.cursos){
            jComboBox1.addItem(e.toString());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Alumno ");

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Asignar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Curso");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                                .addComponent(jButton2)))
                        .addGap(68, 68, 68))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        BienvenidoAlumno c = new BienvenidoAlumno();
        c.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
  String nombreCurso = jComboBox1.getSelectedItem().toString();

    // Verificar si se ha seleccionado un curso
    if (nombreCurso.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor seleccione un curso", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Obtener el alumno logeado
    Alumno alumnoLogeado = LoginB.alumnoLogeado;

    // Verificar si el alumno logeado no es nulo
    if (alumnoLogeado == null) {
        JOptionPane.showMessageDialog(this, "No hay ningún alumno logeado", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Buscar el curso seleccionado en la lista de cursos
    Curso cursoSeleccionado = null;
    for (Curso curso : LoginB.cursos) {
        if (curso.toString().equals(nombreCurso)) {
            cursoSeleccionado = curso;
            break;
        }
    }

    // Verificar si se encontró el curso
    if (cursoSeleccionado == null) {
        JOptionPane.showMessageDialog(this, "El curso seleccionado no existe", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Verificar si el alumno ya está asignado a este curso
    for (Alumno alumno : cursoSeleccionado.getAlumnos()) {
        if (alumno.getCarne().equals(alumnoLogeado.getCarne())) {
            JOptionPane.showMessageDialog(this, "El alumno ya está asignado a este curso.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    // Verificar si el alumno ya está asignado a 5 cursos
    int contarCursos = 0;
    for (Curso curso : LoginB.cursos) {
        for (Alumno alumno : curso.getAlumnos()) {
            if (alumno.getCarne().equals(alumnoLogeado.getCarne())) {
                contarCursos++;
            }
        }
    }

    if (contarCursos >= 5) {
        JOptionPane.showMessageDialog(this, "El alumno ya está asignado a 5 cursos.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Crear una nueva instancia de Alumno y copiar los datos del alumno logeado
    Alumno nuevoAlumno = new Alumno();
    nuevoAlumno.setNombre(alumnoLogeado.getNombre());
    nuevoAlumno.setApellido(alumnoLogeado.getApellido());
    nuevoAlumno.setCarne(alumnoLogeado.getCarne());
    nuevoAlumno.setPassword(alumnoLogeado.getPassword());
    nuevoAlumno.setNota(alumnoLogeado.getNota());

    // Agregar al nuevo alumno al curso
    cursoSeleccionado.getAlumnos().add(nuevoAlumno);

    // Mostrar mensaje de éxito
    JOptionPane.showMessageDialog(this, "La asignación de cursos fue exitosa");
   
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
